bootJar {
    enabled = false
}
jar {
    enabled = true
}

dependencies {
    api project(':common')
    api 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'mysql:mysql-connector-java:8.0.33'

    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'

    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

    testImplementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    testImplementation 'com.h2database:h2'
}

def querydslDir = '$buildDir/generated/querydsl'
sourceSets {
    main.java.srcDir querydslDir
}
tasks.withType(JavaCompile).configureEach {
    options.annotationProcessorPath = configurations.annotationProcessor
}

subprojects {
    bootJar {
        enabled = false
    }
    jar {
        enabled = true
    }

    dependencies {
        implementation project(':domain')
        
        // 도메인 계층간의 분리가 영속화 계층까지 분리가 되어야 할 경우 제거(ex. rdb의 관계가 제거되면 아래 의존 제거)
        if (project.name == 'domain-order') {
            implementation project(':domain:domain-show')
        }
        else if (project.name == 'domain-payment') {
            implementation project(':domain:domain-order')
        }
    }

    def subquerydslDir = '$buildDir/generated/querydsl'
    sourceSets {
        main.java.srcDir subquerydslDir
    }
    tasks.withType(JavaCompile).configureEach {
        options.annotationProcessorPath = configurations.annotationProcessor
    }
}
